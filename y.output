Gramática

    0 $accept: programa $end

    1 programa: DECLARE declaracion ENDDECLARE bloque
    2         | bloque

    3 bloque: sentencia
    4       | sentencia bloque

    5 declaracion: type variables PUNTOYC
    6            | type variables PUNTOYC declaracion

    7 type: INT
    8     | REAL
    9     | STRING

   10 variables: ID
   11          | ID COMA variables

   12 sentencia: asignacion PUNTOYC
   13          | iteracion
   14          | seleccion

   15 $@1: /* vacío */

   16 sentencia: entrada $@1 PUNTOYC
   17          | salida PUNTOYC

   18 asignacion: ID ASIGN multiple

   19 multiple: ID ASIGN asignacion
   20         | ID ASIGN expresion_num
   21         | ID ASIGN expresion_string
   22         | expresion_num
   23         | expresion_string

   24 expresion_num: termino
   25              | expresion_num SUMA termino
   26              | expresion_num RESTA termino

   27 expresion_string: CSTRING CONCAT CSTRING
   28                 | ID CONCAT CSTRING
   29                 | ID CONCAT ID
   30                 | CSTRING CONCAT ID

   31 termino: factor
   32        | termino MULT factor
   33        | termino DIV factor

   34 factor: ID
   35       | CENT
   36       | CREAL
   37       | PARENTA expresion_num PARENTC

   38 comparador: MAYOR
   39           | MENOR
   40           | MENORIGUAL
   41           | MAYORIGUAL
   42           | IGUAL
   43           | DISTINTO

   44 comparacion: PARENTA expresion_num PARENTC comparador PARENTA expresion_num PARENTC
   45            | PARENTA expresion_string PARENTC comparador PARENTA expresion_string PARENTC

   46 comp_logico: PARENTA comparacion PARENTC AND PARENTA comparacion PARENTC
   47            | PARENTA comparacion PARENTC OR PARENTA comparacion PARENTC

   48 condicion: NOT PARENTA condicion PARENTC
   49          | comparacion
   50          | comp_logico

   51 $@2: /* vacío */

   52 iteracion: WHILE PARENTA $@2 condicion PARENTC LLAVEA bloque LLAVEC

   53 $@3: /* vacío */

   54 $@4: /* vacío */

   55 seleccion: IF PARENTA $@3 condicion PARENTC LLAVEA bloque LLAVEC $@4 ELSE LLAVEA bloque LLAVEC

   56 entrada: PUT CSTRING
   57        | PUT CENT
   58        | PUT CREAL

   59 salida: GET ID


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
CSTRING (258) 27 28 30 56
CENT (259) 35 57
CREAL (260) 36 58
WHILE (261) 52
IF (262) 55
ELSE (263) 55
DECLARE (264) 1
ENDDECLARE (265) 1
REAL (266) 8
INT (267) 7
STRING (268) 9
GET (269) 59
PUT (270) 56 57 58
ID (271) 10 11 18 19 20 21 28 29 30 34 59
SUMA (272) 25
RESTA (273) 26
MULT (274) 32
DIV (275) 33
ASIGN (276) 18 19 20 21
CONCAT (277) 27 28 29 30
AND (278) 46
OR (279) 47
NOT (280) 48
MAYOR (281) 38
MENOR (282) 39
MENORIGUAL (283) 40
MAYORIGUAL (284) 41
IGUAL (285) 42
DISTINTO (286) 43
PUNTOYC (287) 5 6 12 16 17
LLAVEA (288) 52 55
LLAVEC (289) 52 55
PARENTA (290) 37 44 45 46 47 48 52 55
PARENTC (291) 37 44 45 46 47 48 52 55
COMA (292) 11


No terminales con las reglas donde aparecen

$accept (38)
    en la izquierda: 0
programa (39)
    en la izquierda: 1 2, en la derecha: 0
bloque (40)
    en la izquierda: 3 4, en la derecha: 1 2 4 52 55
declaracion (41)
    en la izquierda: 5 6, en la derecha: 1 6
type (42)
    en la izquierda: 7 8 9, en la derecha: 5 6
variables (43)
    en la izquierda: 10 11, en la derecha: 5 6 11
sentencia (44)
    en la izquierda: 12 13 14 16 17, en la derecha: 3 4
$@1 (45)
    en la izquierda: 15, en la derecha: 16
asignacion (46)
    en la izquierda: 18, en la derecha: 12 19
multiple (47)
    en la izquierda: 19 20 21 22 23, en la derecha: 18
expresion_num (48)
    en la izquierda: 24 25 26, en la derecha: 20 22 25 26 37 44
expresion_string (49)
    en la izquierda: 27 28 29 30, en la derecha: 21 23 45
termino (50)
    en la izquierda: 31 32 33, en la derecha: 24 25 26 32 33
factor (51)
    en la izquierda: 34 35 36 37, en la derecha: 31 32 33
comparador (52)
    en la izquierda: 38 39 40 41 42 43, en la derecha: 44 45
comparacion (53)
    en la izquierda: 44 45, en la derecha: 46 47 49
comp_logico (54)
    en la izquierda: 46 47, en la derecha: 50
condicion (55)
    en la izquierda: 48 49 50, en la derecha: 48 52 55
iteracion (56)
    en la izquierda: 52, en la derecha: 13
$@2 (57)
    en la izquierda: 51, en la derecha: 52
seleccion (58)
    en la izquierda: 55, en la derecha: 14
$@3 (59)
    en la izquierda: 53, en la derecha: 55
$@4 (60)
    en la izquierda: 54, en la derecha: 55
entrada (61)
    en la izquierda: 56 57 58, en la derecha: 16
salida (62)
    en la izquierda: 59, en la derecha: 17


estado 0

    0 $accept: . programa $end

    WHILE    desplazar e ir al estado 1
    IF       desplazar e ir al estado 2
    DECLARE  desplazar e ir al estado 3
    GET      desplazar e ir al estado 4
    PUT      desplazar e ir al estado 5
    ID       desplazar e ir al estado 6

    programa    ir al estado 7
    bloque      ir al estado 8
    sentencia   ir al estado 9
    asignacion  ir al estado 10
    iteracion   ir al estado 11
    seleccion   ir al estado 12
    entrada     ir al estado 13
    salida      ir al estado 14


estado 1

   52 iteracion: WHILE . PARENTA $@2 condicion PARENTC LLAVEA bloque LLAVEC

    PARENTA  desplazar e ir al estado 15


estado 2

   55 seleccion: IF . PARENTA $@3 condicion PARENTC LLAVEA bloque LLAVEC $@4 ELSE LLAVEA bloque LLAVEC

    PARENTA  desplazar e ir al estado 16


estado 3

    1 programa: DECLARE . declaracion ENDDECLARE bloque

    REAL    desplazar e ir al estado 17
    INT     desplazar e ir al estado 18
    STRING  desplazar e ir al estado 19

    declaracion  ir al estado 20
    type         ir al estado 21


estado 4

   59 salida: GET . ID

    ID  desplazar e ir al estado 22


estado 5

   56 entrada: PUT . CSTRING
   57        | PUT . CENT
   58        | PUT . CREAL

    CSTRING  desplazar e ir al estado 23
    CENT     desplazar e ir al estado 24
    CREAL    desplazar e ir al estado 25


estado 6

   18 asignacion: ID . ASIGN multiple

    ASIGN  desplazar e ir al estado 26


estado 7

    0 $accept: programa . $end

    $end  desplazar e ir al estado 27


estado 8

    2 programa: bloque .

    $default  reduce usando la regla 2 (programa)


estado 9

    3 bloque: sentencia .
    4       | sentencia . bloque

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    GET    desplazar e ir al estado 4
    PUT    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    $default  reduce usando la regla 3 (bloque)

    bloque      ir al estado 28
    sentencia   ir al estado 9
    asignacion  ir al estado 10
    iteracion   ir al estado 11
    seleccion   ir al estado 12
    entrada     ir al estado 13
    salida      ir al estado 14


estado 10

   12 sentencia: asignacion . PUNTOYC

    PUNTOYC  desplazar e ir al estado 29


estado 11

   13 sentencia: iteracion .

    $default  reduce usando la regla 13 (sentencia)


estado 12

   14 sentencia: seleccion .

    $default  reduce usando la regla 14 (sentencia)


estado 13

   16 sentencia: entrada . $@1 PUNTOYC

    $default  reduce usando la regla 15 ($@1)

    $@1  ir al estado 30


estado 14

   17 sentencia: salida . PUNTOYC

    PUNTOYC  desplazar e ir al estado 31


estado 15

   52 iteracion: WHILE PARENTA . $@2 condicion PARENTC LLAVEA bloque LLAVEC

    $default  reduce usando la regla 51 ($@2)

    $@2  ir al estado 32


estado 16

   55 seleccion: IF PARENTA . $@3 condicion PARENTC LLAVEA bloque LLAVEC $@4 ELSE LLAVEA bloque LLAVEC

    $default  reduce usando la regla 53 ($@3)

    $@3  ir al estado 33


estado 17

    8 type: REAL .

    $default  reduce usando la regla 8 (type)


estado 18

    7 type: INT .

    $default  reduce usando la regla 7 (type)


estado 19

    9 type: STRING .

    $default  reduce usando la regla 9 (type)


estado 20

    1 programa: DECLARE declaracion . ENDDECLARE bloque

    ENDDECLARE  desplazar e ir al estado 34


estado 21

    5 declaracion: type . variables PUNTOYC
    6            | type . variables PUNTOYC declaracion

    ID  desplazar e ir al estado 35

    variables  ir al estado 36


estado 22

   59 salida: GET ID .

    $default  reduce usando la regla 59 (salida)


estado 23

   56 entrada: PUT CSTRING .

    $default  reduce usando la regla 56 (entrada)


estado 24

   57 entrada: PUT CENT .

    $default  reduce usando la regla 57 (entrada)


estado 25

   58 entrada: PUT CREAL .

    $default  reduce usando la regla 58 (entrada)


estado 26

   18 asignacion: ID ASIGN . multiple

    CSTRING  desplazar e ir al estado 37
    CENT     desplazar e ir al estado 38
    CREAL    desplazar e ir al estado 39
    ID       desplazar e ir al estado 40
    PARENTA  desplazar e ir al estado 41

    multiple          ir al estado 42
    expresion_num     ir al estado 43
    expresion_string  ir al estado 44
    termino           ir al estado 45
    factor            ir al estado 46


estado 27

    0 $accept: programa $end .

    $default  aceptar


estado 28

    4 bloque: sentencia bloque .

    $default  reduce usando la regla 4 (bloque)


estado 29

   12 sentencia: asignacion PUNTOYC .

    $default  reduce usando la regla 12 (sentencia)


estado 30

   16 sentencia: entrada $@1 . PUNTOYC

    PUNTOYC  desplazar e ir al estado 47


estado 31

   17 sentencia: salida PUNTOYC .

    $default  reduce usando la regla 17 (sentencia)


estado 32

   52 iteracion: WHILE PARENTA $@2 . condicion PARENTC LLAVEA bloque LLAVEC

    NOT      desplazar e ir al estado 48
    PARENTA  desplazar e ir al estado 49

    comparacion  ir al estado 50
    comp_logico  ir al estado 51
    condicion    ir al estado 52


estado 33

   55 seleccion: IF PARENTA $@3 . condicion PARENTC LLAVEA bloque LLAVEC $@4 ELSE LLAVEA bloque LLAVEC

    NOT      desplazar e ir al estado 48
    PARENTA  desplazar e ir al estado 49

    comparacion  ir al estado 50
    comp_logico  ir al estado 51
    condicion    ir al estado 53


estado 34

    1 programa: DECLARE declaracion ENDDECLARE . bloque

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    GET    desplazar e ir al estado 4
    PUT    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    bloque      ir al estado 54
    sentencia   ir al estado 9
    asignacion  ir al estado 10
    iteracion   ir al estado 11
    seleccion   ir al estado 12
    entrada     ir al estado 13
    salida      ir al estado 14


estado 35

   10 variables: ID .
   11          | ID . COMA variables

    COMA  desplazar e ir al estado 55

    $default  reduce usando la regla 10 (variables)


estado 36

    5 declaracion: type variables . PUNTOYC
    6            | type variables . PUNTOYC declaracion

    PUNTOYC  desplazar e ir al estado 56


estado 37

   27 expresion_string: CSTRING . CONCAT CSTRING
   30                 | CSTRING . CONCAT ID

    CONCAT  desplazar e ir al estado 57


estado 38

   35 factor: CENT .

    $default  reduce usando la regla 35 (factor)


estado 39

   36 factor: CREAL .

    $default  reduce usando la regla 36 (factor)


estado 40

   19 multiple: ID . ASIGN asignacion
   20         | ID . ASIGN expresion_num
   21         | ID . ASIGN expresion_string
   28 expresion_string: ID . CONCAT CSTRING
   29                 | ID . CONCAT ID
   34 factor: ID .

    ASIGN   desplazar e ir al estado 58
    CONCAT  desplazar e ir al estado 59

    $default  reduce usando la regla 34 (factor)


estado 41

   37 factor: PARENTA . expresion_num PARENTC

    CENT     desplazar e ir al estado 38
    CREAL    desplazar e ir al estado 39
    ID       desplazar e ir al estado 60
    PARENTA  desplazar e ir al estado 41

    expresion_num  ir al estado 61
    termino        ir al estado 45
    factor         ir al estado 46


estado 42

   18 asignacion: ID ASIGN multiple .

    $default  reduce usando la regla 18 (asignacion)


estado 43

   22 multiple: expresion_num .
   25 expresion_num: expresion_num . SUMA termino
   26              | expresion_num . RESTA termino

    SUMA   desplazar e ir al estado 62
    RESTA  desplazar e ir al estado 63

    $default  reduce usando la regla 22 (multiple)


estado 44

   23 multiple: expresion_string .

    $default  reduce usando la regla 23 (multiple)


estado 45

   24 expresion_num: termino .
   32 termino: termino . MULT factor
   33        | termino . DIV factor

    MULT  desplazar e ir al estado 64
    DIV   desplazar e ir al estado 65

    $default  reduce usando la regla 24 (expresion_num)


estado 46

   31 termino: factor .

    $default  reduce usando la regla 31 (termino)


estado 47

   16 sentencia: entrada $@1 PUNTOYC .

    $default  reduce usando la regla 16 (sentencia)


estado 48

   48 condicion: NOT . PARENTA condicion PARENTC

    PARENTA  desplazar e ir al estado 66


estado 49

   44 comparacion: PARENTA . expresion_num PARENTC comparador PARENTA expresion_num PARENTC
   45            | PARENTA . expresion_string PARENTC comparador PARENTA expresion_string PARENTC
   46 comp_logico: PARENTA . comparacion PARENTC AND PARENTA comparacion PARENTC
   47            | PARENTA . comparacion PARENTC OR PARENTA comparacion PARENTC

    CSTRING  desplazar e ir al estado 37
    CENT     desplazar e ir al estado 38
    CREAL    desplazar e ir al estado 39
    ID       desplazar e ir al estado 67
    PARENTA  desplazar e ir al estado 68

    expresion_num     ir al estado 69
    expresion_string  ir al estado 70
    termino           ir al estado 45
    factor            ir al estado 46
    comparacion       ir al estado 71


estado 50

   49 condicion: comparacion .

    $default  reduce usando la regla 49 (condicion)


estado 51

   50 condicion: comp_logico .

    $default  reduce usando la regla 50 (condicion)


estado 52

   52 iteracion: WHILE PARENTA $@2 condicion . PARENTC LLAVEA bloque LLAVEC

    PARENTC  desplazar e ir al estado 72


estado 53

   55 seleccion: IF PARENTA $@3 condicion . PARENTC LLAVEA bloque LLAVEC $@4 ELSE LLAVEA bloque LLAVEC

    PARENTC  desplazar e ir al estado 73


estado 54

    1 programa: DECLARE declaracion ENDDECLARE bloque .

    $default  reduce usando la regla 1 (programa)


estado 55

   11 variables: ID COMA . variables

    ID  desplazar e ir al estado 35

    variables  ir al estado 74


estado 56

    5 declaracion: type variables PUNTOYC .
    6            | type variables PUNTOYC . declaracion

    REAL    desplazar e ir al estado 17
    INT     desplazar e ir al estado 18
    STRING  desplazar e ir al estado 19

    $default  reduce usando la regla 5 (declaracion)

    declaracion  ir al estado 75
    type         ir al estado 21


estado 57

   27 expresion_string: CSTRING CONCAT . CSTRING
   30                 | CSTRING CONCAT . ID

    CSTRING  desplazar e ir al estado 76
    ID       desplazar e ir al estado 77


estado 58

   19 multiple: ID ASIGN . asignacion
   20         | ID ASIGN . expresion_num
   21         | ID ASIGN . expresion_string

    CSTRING  desplazar e ir al estado 37
    CENT     desplazar e ir al estado 38
    CREAL    desplazar e ir al estado 39
    ID       desplazar e ir al estado 78
    PARENTA  desplazar e ir al estado 41

    asignacion        ir al estado 79
    expresion_num     ir al estado 80
    expresion_string  ir al estado 81
    termino           ir al estado 45
    factor            ir al estado 46


estado 59

   28 expresion_string: ID CONCAT . CSTRING
   29                 | ID CONCAT . ID

    CSTRING  desplazar e ir al estado 82
    ID       desplazar e ir al estado 83


estado 60

   34 factor: ID .

    $default  reduce usando la regla 34 (factor)


estado 61

   25 expresion_num: expresion_num . SUMA termino
   26              | expresion_num . RESTA termino
   37 factor: PARENTA expresion_num . PARENTC

    SUMA     desplazar e ir al estado 62
    RESTA    desplazar e ir al estado 63
    PARENTC  desplazar e ir al estado 84


estado 62

   25 expresion_num: expresion_num SUMA . termino

    CENT     desplazar e ir al estado 38
    CREAL    desplazar e ir al estado 39
    ID       desplazar e ir al estado 60
    PARENTA  desplazar e ir al estado 41

    termino  ir al estado 85
    factor   ir al estado 46


estado 63

   26 expresion_num: expresion_num RESTA . termino

    CENT     desplazar e ir al estado 38
    CREAL    desplazar e ir al estado 39
    ID       desplazar e ir al estado 60
    PARENTA  desplazar e ir al estado 41

    termino  ir al estado 86
    factor   ir al estado 46


estado 64

   32 termino: termino MULT . factor

    CENT     desplazar e ir al estado 38
    CREAL    desplazar e ir al estado 39
    ID       desplazar e ir al estado 60
    PARENTA  desplazar e ir al estado 41

    factor  ir al estado 87


estado 65

   33 termino: termino DIV . factor

    CENT     desplazar e ir al estado 38
    CREAL    desplazar e ir al estado 39
    ID       desplazar e ir al estado 60
    PARENTA  desplazar e ir al estado 41

    factor  ir al estado 88


estado 66

   48 condicion: NOT PARENTA . condicion PARENTC

    NOT      desplazar e ir al estado 48
    PARENTA  desplazar e ir al estado 49

    comparacion  ir al estado 50
    comp_logico  ir al estado 51
    condicion    ir al estado 89


estado 67

   28 expresion_string: ID . CONCAT CSTRING
   29                 | ID . CONCAT ID
   34 factor: ID .

    CONCAT  desplazar e ir al estado 59

    $default  reduce usando la regla 34 (factor)


estado 68

   37 factor: PARENTA . expresion_num PARENTC
   44 comparacion: PARENTA . expresion_num PARENTC comparador PARENTA expresion_num PARENTC
   45            | PARENTA . expresion_string PARENTC comparador PARENTA expresion_string PARENTC

    CSTRING  desplazar e ir al estado 37
    CENT     desplazar e ir al estado 38
    CREAL    desplazar e ir al estado 39
    ID       desplazar e ir al estado 67
    PARENTA  desplazar e ir al estado 41

    expresion_num     ir al estado 90
    expresion_string  ir al estado 70
    termino           ir al estado 45
    factor            ir al estado 46


estado 69

   25 expresion_num: expresion_num . SUMA termino
   26              | expresion_num . RESTA termino
   44 comparacion: PARENTA expresion_num . PARENTC comparador PARENTA expresion_num PARENTC

    SUMA     desplazar e ir al estado 62
    RESTA    desplazar e ir al estado 63
    PARENTC  desplazar e ir al estado 91


estado 70

   45 comparacion: PARENTA expresion_string . PARENTC comparador PARENTA expresion_string PARENTC

    PARENTC  desplazar e ir al estado 92


estado 71

   46 comp_logico: PARENTA comparacion . PARENTC AND PARENTA comparacion PARENTC
   47            | PARENTA comparacion . PARENTC OR PARENTA comparacion PARENTC

    PARENTC  desplazar e ir al estado 93


estado 72

   52 iteracion: WHILE PARENTA $@2 condicion PARENTC . LLAVEA bloque LLAVEC

    LLAVEA  desplazar e ir al estado 94


estado 73

   55 seleccion: IF PARENTA $@3 condicion PARENTC . LLAVEA bloque LLAVEC $@4 ELSE LLAVEA bloque LLAVEC

    LLAVEA  desplazar e ir al estado 95


estado 74

   11 variables: ID COMA variables .

    $default  reduce usando la regla 11 (variables)


estado 75

    6 declaracion: type variables PUNTOYC declaracion .

    $default  reduce usando la regla 6 (declaracion)


estado 76

   27 expresion_string: CSTRING CONCAT CSTRING .

    $default  reduce usando la regla 27 (expresion_string)


estado 77

   30 expresion_string: CSTRING CONCAT ID .

    $default  reduce usando la regla 30 (expresion_string)


estado 78

   18 asignacion: ID . ASIGN multiple
   28 expresion_string: ID . CONCAT CSTRING
   29                 | ID . CONCAT ID
   34 factor: ID .

    ASIGN   desplazar e ir al estado 26
    CONCAT  desplazar e ir al estado 59

    $default  reduce usando la regla 34 (factor)


estado 79

   19 multiple: ID ASIGN asignacion .

    $default  reduce usando la regla 19 (multiple)


estado 80

   20 multiple: ID ASIGN expresion_num .
   25 expresion_num: expresion_num . SUMA termino
   26              | expresion_num . RESTA termino

    SUMA   desplazar e ir al estado 62
    RESTA  desplazar e ir al estado 63

    $default  reduce usando la regla 20 (multiple)


estado 81

   21 multiple: ID ASIGN expresion_string .

    $default  reduce usando la regla 21 (multiple)


estado 82

   28 expresion_string: ID CONCAT CSTRING .

    $default  reduce usando la regla 28 (expresion_string)


estado 83

   29 expresion_string: ID CONCAT ID .

    $default  reduce usando la regla 29 (expresion_string)


estado 84

   37 factor: PARENTA expresion_num PARENTC .

    $default  reduce usando la regla 37 (factor)


estado 85

   25 expresion_num: expresion_num SUMA termino .
   32 termino: termino . MULT factor
   33        | termino . DIV factor

    MULT  desplazar e ir al estado 64
    DIV   desplazar e ir al estado 65

    $default  reduce usando la regla 25 (expresion_num)


estado 86

   26 expresion_num: expresion_num RESTA termino .
   32 termino: termino . MULT factor
   33        | termino . DIV factor

    MULT  desplazar e ir al estado 64
    DIV   desplazar e ir al estado 65

    $default  reduce usando la regla 26 (expresion_num)


estado 87

   32 termino: termino MULT factor .

    $default  reduce usando la regla 32 (termino)


estado 88

   33 termino: termino DIV factor .

    $default  reduce usando la regla 33 (termino)


estado 89

   48 condicion: NOT PARENTA condicion . PARENTC

    PARENTC  desplazar e ir al estado 96


estado 90

   25 expresion_num: expresion_num . SUMA termino
   26              | expresion_num . RESTA termino
   37 factor: PARENTA expresion_num . PARENTC
   44 comparacion: PARENTA expresion_num . PARENTC comparador PARENTA expresion_num PARENTC

    SUMA     desplazar e ir al estado 62
    RESTA    desplazar e ir al estado 63
    PARENTC  desplazar e ir al estado 97


estado 91

   44 comparacion: PARENTA expresion_num PARENTC . comparador PARENTA expresion_num PARENTC

    MAYOR       desplazar e ir al estado 98
    MENOR       desplazar e ir al estado 99
    MENORIGUAL  desplazar e ir al estado 100
    MAYORIGUAL  desplazar e ir al estado 101
    IGUAL       desplazar e ir al estado 102
    DISTINTO    desplazar e ir al estado 103

    comparador  ir al estado 104


estado 92

   45 comparacion: PARENTA expresion_string PARENTC . comparador PARENTA expresion_string PARENTC

    MAYOR       desplazar e ir al estado 98
    MENOR       desplazar e ir al estado 99
    MENORIGUAL  desplazar e ir al estado 100
    MAYORIGUAL  desplazar e ir al estado 101
    IGUAL       desplazar e ir al estado 102
    DISTINTO    desplazar e ir al estado 103

    comparador  ir al estado 105


estado 93

   46 comp_logico: PARENTA comparacion PARENTC . AND PARENTA comparacion PARENTC
   47            | PARENTA comparacion PARENTC . OR PARENTA comparacion PARENTC

    AND  desplazar e ir al estado 106
    OR   desplazar e ir al estado 107


estado 94

   52 iteracion: WHILE PARENTA $@2 condicion PARENTC LLAVEA . bloque LLAVEC

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    GET    desplazar e ir al estado 4
    PUT    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    bloque      ir al estado 108
    sentencia   ir al estado 9
    asignacion  ir al estado 10
    iteracion   ir al estado 11
    seleccion   ir al estado 12
    entrada     ir al estado 13
    salida      ir al estado 14


estado 95

   55 seleccion: IF PARENTA $@3 condicion PARENTC LLAVEA . bloque LLAVEC $@4 ELSE LLAVEA bloque LLAVEC

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    GET    desplazar e ir al estado 4
    PUT    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    bloque      ir al estado 109
    sentencia   ir al estado 9
    asignacion  ir al estado 10
    iteracion   ir al estado 11
    seleccion   ir al estado 12
    entrada     ir al estado 13
    salida      ir al estado 14


estado 96

   48 condicion: NOT PARENTA condicion PARENTC .

    $default  reduce usando la regla 48 (condicion)


estado 97

   37 factor: PARENTA expresion_num PARENTC .
   44 comparacion: PARENTA expresion_num PARENTC . comparador PARENTA expresion_num PARENTC

    MAYOR       desplazar e ir al estado 98
    MENOR       desplazar e ir al estado 99
    MENORIGUAL  desplazar e ir al estado 100
    MAYORIGUAL  desplazar e ir al estado 101
    IGUAL       desplazar e ir al estado 102
    DISTINTO    desplazar e ir al estado 103

    $default  reduce usando la regla 37 (factor)

    comparador  ir al estado 104


estado 98

   38 comparador: MAYOR .

    $default  reduce usando la regla 38 (comparador)


estado 99

   39 comparador: MENOR .

    $default  reduce usando la regla 39 (comparador)


estado 100

   40 comparador: MENORIGUAL .

    $default  reduce usando la regla 40 (comparador)


estado 101

   41 comparador: MAYORIGUAL .

    $default  reduce usando la regla 41 (comparador)


estado 102

   42 comparador: IGUAL .

    $default  reduce usando la regla 42 (comparador)


estado 103

   43 comparador: DISTINTO .

    $default  reduce usando la regla 43 (comparador)


estado 104

   44 comparacion: PARENTA expresion_num PARENTC comparador . PARENTA expresion_num PARENTC

    PARENTA  desplazar e ir al estado 110


estado 105

   45 comparacion: PARENTA expresion_string PARENTC comparador . PARENTA expresion_string PARENTC

    PARENTA  desplazar e ir al estado 111


estado 106

   46 comp_logico: PARENTA comparacion PARENTC AND . PARENTA comparacion PARENTC

    PARENTA  desplazar e ir al estado 112


estado 107

   47 comp_logico: PARENTA comparacion PARENTC OR . PARENTA comparacion PARENTC

    PARENTA  desplazar e ir al estado 113


estado 108

   52 iteracion: WHILE PARENTA $@2 condicion PARENTC LLAVEA bloque . LLAVEC

    LLAVEC  desplazar e ir al estado 114


estado 109

   55 seleccion: IF PARENTA $@3 condicion PARENTC LLAVEA bloque . LLAVEC $@4 ELSE LLAVEA bloque LLAVEC

    LLAVEC  desplazar e ir al estado 115


estado 110

   44 comparacion: PARENTA expresion_num PARENTC comparador PARENTA . expresion_num PARENTC

    CENT     desplazar e ir al estado 38
    CREAL    desplazar e ir al estado 39
    ID       desplazar e ir al estado 60
    PARENTA  desplazar e ir al estado 41

    expresion_num  ir al estado 116
    termino        ir al estado 45
    factor         ir al estado 46


estado 111

   45 comparacion: PARENTA expresion_string PARENTC comparador PARENTA . expresion_string PARENTC

    CSTRING  desplazar e ir al estado 37
    ID       desplazar e ir al estado 117

    expresion_string  ir al estado 118


estado 112

   46 comp_logico: PARENTA comparacion PARENTC AND PARENTA . comparacion PARENTC

    PARENTA  desplazar e ir al estado 119

    comparacion  ir al estado 120


estado 113

   47 comp_logico: PARENTA comparacion PARENTC OR PARENTA . comparacion PARENTC

    PARENTA  desplazar e ir al estado 119

    comparacion  ir al estado 121


estado 114

   52 iteracion: WHILE PARENTA $@2 condicion PARENTC LLAVEA bloque LLAVEC .

    $default  reduce usando la regla 52 (iteracion)


estado 115

   55 seleccion: IF PARENTA $@3 condicion PARENTC LLAVEA bloque LLAVEC . $@4 ELSE LLAVEA bloque LLAVEC

    $default  reduce usando la regla 54 ($@4)

    $@4  ir al estado 122


estado 116

   25 expresion_num: expresion_num . SUMA termino
   26              | expresion_num . RESTA termino
   44 comparacion: PARENTA expresion_num PARENTC comparador PARENTA expresion_num . PARENTC

    SUMA     desplazar e ir al estado 62
    RESTA    desplazar e ir al estado 63
    PARENTC  desplazar e ir al estado 123


estado 117

   28 expresion_string: ID . CONCAT CSTRING
   29                 | ID . CONCAT ID

    CONCAT  desplazar e ir al estado 59


estado 118

   45 comparacion: PARENTA expresion_string PARENTC comparador PARENTA expresion_string . PARENTC

    PARENTC  desplazar e ir al estado 124


estado 119

   44 comparacion: PARENTA . expresion_num PARENTC comparador PARENTA expresion_num PARENTC
   45            | PARENTA . expresion_string PARENTC comparador PARENTA expresion_string PARENTC

    CSTRING  desplazar e ir al estado 37
    CENT     desplazar e ir al estado 38
    CREAL    desplazar e ir al estado 39
    ID       desplazar e ir al estado 67
    PARENTA  desplazar e ir al estado 41

    expresion_num     ir al estado 69
    expresion_string  ir al estado 70
    termino           ir al estado 45
    factor            ir al estado 46


estado 120

   46 comp_logico: PARENTA comparacion PARENTC AND PARENTA comparacion . PARENTC

    PARENTC  desplazar e ir al estado 125


estado 121

   47 comp_logico: PARENTA comparacion PARENTC OR PARENTA comparacion . PARENTC

    PARENTC  desplazar e ir al estado 126


estado 122

   55 seleccion: IF PARENTA $@3 condicion PARENTC LLAVEA bloque LLAVEC $@4 . ELSE LLAVEA bloque LLAVEC

    ELSE  desplazar e ir al estado 127


estado 123

   44 comparacion: PARENTA expresion_num PARENTC comparador PARENTA expresion_num PARENTC .

    $default  reduce usando la regla 44 (comparacion)


estado 124

   45 comparacion: PARENTA expresion_string PARENTC comparador PARENTA expresion_string PARENTC .

    $default  reduce usando la regla 45 (comparacion)


estado 125

   46 comp_logico: PARENTA comparacion PARENTC AND PARENTA comparacion PARENTC .

    $default  reduce usando la regla 46 (comp_logico)


estado 126

   47 comp_logico: PARENTA comparacion PARENTC OR PARENTA comparacion PARENTC .

    $default  reduce usando la regla 47 (comp_logico)


estado 127

   55 seleccion: IF PARENTA $@3 condicion PARENTC LLAVEA bloque LLAVEC $@4 ELSE . LLAVEA bloque LLAVEC

    LLAVEA  desplazar e ir al estado 128


estado 128

   55 seleccion: IF PARENTA $@3 condicion PARENTC LLAVEA bloque LLAVEC $@4 ELSE LLAVEA . bloque LLAVEC

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    GET    desplazar e ir al estado 4
    PUT    desplazar e ir al estado 5
    ID     desplazar e ir al estado 6

    bloque      ir al estado 129
    sentencia   ir al estado 9
    asignacion  ir al estado 10
    iteracion   ir al estado 11
    seleccion   ir al estado 12
    entrada     ir al estado 13
    salida      ir al estado 14


estado 129

   55 seleccion: IF PARENTA $@3 condicion PARENTC LLAVEA bloque LLAVEC $@4 ELSE LLAVEA bloque . LLAVEC

    LLAVEC  desplazar e ir al estado 130


estado 130

   55 seleccion: IF PARENTA $@3 condicion PARENTC LLAVEA bloque LLAVEC $@4 ELSE LLAVEA bloque LLAVEC .

    $default  reduce usando la regla 55 (seleccion)
